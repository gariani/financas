    """metadata = sa.MetaData()
    tbl = sa.Table('gasto', metadata,
                   sa.Column('id', sa.Integer, primary_key=True),
                   sa.Column('descricao_previsto', sa.String(100)),
                   sa.Column('valor_previsto', sa.REAL),
                   sa.Column('total_realizado', sa.REAL),
                   sa.Column('saldo', sa.REAL))

    async def create_table(engine):
        async with engine.acquire() as conn:
            await conn.execute('DROP TABLE IF EXISTS gasto')
            await conn.execute('''CREATE TABLE GASTO (
                    id serial PRIMARY KEY,
                    descricao_previsto varchar(100),
                    valor_previsto real,
                    total_previsto real,
                    saldo real''')

    def go():
        urlparse.uses_netloc.append("postgres")
        url = urlparse.urlparse(os.environ["DATABASE_URL"])
        async with create_engine(user=url.username,
                                 database=url.path[1:],
                                 host=url.hostname,
                                 password=url.password)

        async with engine.acquite() as conn:
            await conn.execute(tbl.insert().values(descricao_previsto="Teste",
                                                   valor_previsto=12.0,
                                                   total_previsto=1.0,
                                                   saldo=1.1))

    """